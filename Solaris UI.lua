"-- This User Interface Library is brought to you by Solaris Software.\r\nlocal Solaris = Instance.new(\"ScreenGui\")\r\nSolaris.Name = \"dosage's solaris gui\"\r\nSolaris.Parent = game.CoreGui\r\nSolaris.ZIndexBehavior = Enum.ZIndexBehavior.Sibling\r\n\r\nlocal NotificationHolder = Instance.new(\"ScreenGui\")\r\nNotificationHolder.Name = \"notiHolder\"\r\nNotificationHolder.Parent = game.CoreGui\r\nNotificationHolder.ZIndexBehavior = Enum.ZIndexBehavior.Sibling\r\n\r\nlocal UserInputService = game:GetService(\"UserInputService\")\r\nlocal TweenService = game:GetService(\"TweenService\")\r\nlocal RunService = game:GetService(\"RunService\")\r\nlocal LocalPlayer = game:GetService(\"Players\").LocalPlayer\r\nlocal Mouse = LocalPlayer:GetMouse()\r\nlocal http = game:GetService(\"HttpService\")\r\n\r\nlocal WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3}\r\nlocal BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}\r\n\r\nlocal function CheckKey(tab, key)\r\n\tfor i, v in next, tab do\r\n\t\tif v == key then\r\n\t\t\treturn true\r\n\t\tend\r\n\tend\r\nend\r\n\r\n\r\n\r\nlocal NotificationFrame = game:GetObjects(\"rbxassetid://6924028278\")[1]\r\nNotificationFrame.ZIndex = 4\r\nNotificationFrame.Parent = NotificationHolder\r\nscript = NotificationFrame.NotifScript\r\nlocal Notify = loadstring(NotificationFrame.NotifScript.Source)()\r\nscript = oldScript\r\n\r\nlocal SolarisLib = {\r\n    Themes = {\r\n        Default = {\r\n            MainFrame = Color3.fromRGB(25, 25, 25),\r\n            TopBar = Color3.fromRGB(30, 30, 30),\r\n            TextColor =  Color3.fromRGB(255,255,255),\r\n            Menu = Color3.fromRGB(37, 37, 37),\r\n            TabToggled = Color3.fromRGB(43,43,43),\r\n            Button = Color3.fromRGB(30,30,30),\r\n            ButtonHold = Color3.fromRGB(31,31,31),\r\n            Toggle = Color3.fromRGB(30,30,30),\r\n            ToggleFrame = Color3.fromRGB(55,55,55),\r\n            ToggleToggled = Color3.fromRGB(22, 168, 76),\r\n            Slider = Color3.fromRGB(30,30,30),\r\n            SliderBar = Color3.fromRGB(25, 25, 25),\r\n            SliderInc = Color3.fromRGB(60, 60, 60),\r\n            Dropdown = Color3.fromRGB(30,30,30),\r\n            DropdownItem = Color3.fromRGB(30,30,30),\r\n            Textbox = Color3.fromRGB(30,30,30),\r\n            TextboxFrame = Color3.fromRGB(25, 25, 25),\r\n            Colorpicker = Color3.fromRGB(30,30,30),\r\n            Label = Color3.fromRGB(30,30,30),\r\n            Bind = Color3.fromRGB(30,30,30)\r\n        },\r\n        Discord = {\r\n            MainFrame = Color3.fromRGB(54,57,63),\r\n            TopBar = Color3.fromRGB(47,49,54),\r\n            TextColor =  Color3.fromRGB(255,255,255),\r\n            Menu = Color3.fromRGB(47,49,54),\r\n            TabToggled = Color3.fromRGB(54,57,63),\r\n            Button = Color3.fromRGB(88,101,242),\r\n            ButtonHold = Color3.fromRGB(71,82,196),\r\n            Toggle = Color3.fromRGB(47,49,54),\r\n            ToggleFrame = Color3.fromRGB(67,69,74),\r\n            ToggleToggled = Color3.fromRGB(22, 168, 76),\r\n            Slider = Color3.fromRGB(47,49,54),\r\n            SliderBar = Color3.fromRGB(42,44,49),\r\n            SliderInc = Color3.fromRGB(62,64,69),\r\n            Dropdown = Color3.fromRGB(47,49,54),\r\n            DropdownItem = Color3.fromRGB(47,49,54),\r\n            Textbox = Color3.fromRGB(47,49,54),\r\n            TextboxFrame = Color3.fromRGB(42,44,49),\r\n            Colorpicker = Color3.fromRGB(47,49,54),\r\n            Label = Color3.fromRGB(47,49,54),\r\n            Bind = Color3.fromRGB(47,49,54)\r\n        },\r\n        Blue = {\r\n            MainFrame = Color3.fromRGB(35, 35, 50),\r\n            TopBar = Color3.fromRGB(40, 40, 55),\r\n            TextColor =  Color3.fromRGB(255,255,255),\r\n            Menu = Color3.fromRGB(47, 47, 62),\r\n            TabToggled = Color3.fromRGB(53,53,68),\r\n            Button = Color3.fromRGB(40,40,55),\r\n            ButtonHold = Color3.fromRGB(41,41,56),\r\n            Toggle = Color3.fromRGB(40,40,55),\r\n            ToggleFrame = Color3.fromRGB(65,65,80),\r\n            ToggleToggled = Color3.fromRGB(64, 64, 120),\r\n            Slider = Color3.fromRGB(40,40,55),\r\n            SliderBar = Color3.fromRGB(35, 35, 50),\r\n            SliderInc = Color3.fromRGB(70, 70, 85),\r\n            Dropdown = Color3.fromRGB(40,40,55),\r\n            DropdownItem = Color3.fromRGB(40,40,55),\r\n            Textbox = Color3.fromRGB(40,40,55),\r\n            TextboxFrame = Color3.fromRGB(35, 35, 50),\r\n            Colorpicker = Color3.fromRGB(40,40,55),\r\n            Label = Color3.fromRGB(40,40,55),\r\n            Bind = Color3.fromRGB(40,40,55)\r\n        },\r\n        Red = {\r\n            MainFrame = Color3.fromRGB(50, 35, 35),\r\n            TopBar = Color3.fromRGB(55, 40, 40),\r\n            TextColor =  Color3.fromRGB(255,255,255),\r\n            Menu = Color3.fromRGB(62, 47, 47),\r\n            TabToggled = Color3.fromRGB(68,53,53),\r\n            Button = Color3.fromRGB(55,40,40),\r\n            ButtonHold = Color3.fromRGB(56,41,41),\r\n            Toggle = Color3.fromRGB(55,40,40),\r\n            ToggleFrame = Color3.fromRGB(80,65,65),\r\n            ToggleToggled = Color3.fromRGB(120, 64, 64),\r\n            Slider = Color3.fromRGB(55,40,40),\r\n            SliderBar = Color3.fromRGB(50, 35, 35),\r\n            SliderInc = Color3.fromRGB(85, 70, 70),\r\n            Dropdown = Color3.fromRGB(55,40,40),\r\n            DropdownItem = Color3.fromRGB(55,40,40),\r\n            Textbox = Color3.fromRGB(55,40,40),\r\n            TextboxFrame = Color3.fromRGB(50, 35, 35),\r\n            Colorpicker = Color3.fromRGB(55,40,40),\r\n            Label = Color3.fromRGB(55,40,40),\r\n            Bind = Color3.fromRGB(55,40,40)\r\n        },\r\n        Green = {\r\n            MainFrame = Color3.fromRGB(35, 50, 35),\r\n            TopBar = Color3.fromRGB(40, 55, 40),\r\n            TextColor =  Color3.fromRGB(255,255,255),\r\n            Menu = Color3.fromRGB(47, 62, 47),\r\n            TabToggled = Color3.fromRGB(53,68,53),\r\n            Button = Color3.fromRGB(40,55,40),\r\n            ButtonHold = Color3.fromRGB(41,56,41),\r\n            Toggle = Color3.fromRGB(40,55,40),\r\n            ToggleFrame = Color3.fromRGB(65,80,65),\r\n            ToggleToggled = Color3.fromRGB(64, 120, 64),\r\n            Slider = Color3.fromRGB(40,55,40),\r\n            SliderBar = Color3.fromRGB(35, 50, 35),\r\n            SliderInc = Color3.fromRGB(70, 85, 70),\r\n            Dropdown = Color3.fromRGB(40,55,40),\r\n            DropdownItem = Color3.fromRGB(40,55,40),\r\n            Textbox = Color3.fromRGB(40,55,40),\r\n            TextboxFrame = Color3.fromRGB(35, 50, 35),\r\n            Colorpicker = Color3.fromRGB(40,55,40),\r\n            Label = Color3.fromRGB(40,55,40),\r\n            Bind = Color3.fromRGB(40,55,40)\r\n        }\r\n    },\r\n    Settings = {\r\n        Theme = \"Default\",\r\n        ShowFriendsOnLaunch = true,\r\n        ShowMusicOnLaunch = false,\r\n        CloseBind = \"RightControl\"\r\n    },\r\n    Flags = {},\r\n    CurrentTab\r\n}\r\n\r\n\r\n\r\nlocal MainUI = game:GetObjects(\"rbxassetid://7835727566\")[1]\r\nprint(\"SolarisLib Loaded!\")\r\nlocal function MakeDraggable(topbarobject, object) \r\n    pcall(function()\r\n\t\tlocal dragging, dragInput, mousePos, framePos = false\r\n\t\ttopbarobject.InputBegan:Connect(function(input)\r\n\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\tdragging = true\r\n\t\t\t\tmousePos = input.Position\r\n\t\t\t\tframePos = object.Position\r\n\r\n\t\t\t\tinput.Changed:Connect(function()\r\n\t\t\t\t\tif input.UserInputState == Enum.UserInputState.End then\r\n\t\t\t\t\t\tdragging = false\r\n\t\t\t\t\tend\r\n\t\t\t\tend)\r\n\t\t\tend\r\n\t\tend)\r\n\t\ttopbarobject.InputChanged:Connect(function(input)\r\n\t\t\tif input.UserInputType == Enum.UserInputType.MouseMovement then\r\n\t\t\t\tdragInput = input\r\n\t\t\tend\r\n\t\tend)\r\n\t\tUserInputService.InputChanged:Connect(function(input)\r\n\t\t\tif input == dragInput and dragging then\r\n\t\t\t\tlocal delta = input.Position - mousePos\r\n\t\t\t\tobject.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)\r\n\t\t\tend\r\n\t\tend)\r\n\tend)\r\nend\r\n\r\n\r\nfunction Ripple(Object)\r\n\tspawn(function()\r\n\t\tlocal Circle = Instance.new(\"ImageLabel\")\r\n\t\tCircle.Parent = Object\r\n\t\tCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)\r\n\t\tCircle.BackgroundTransparency = 1.000\r\n\t\tCircle.ZIndex = 10\r\n\t\tCircle.Image = \"rbxassetid://266543268\"\r\n\t\tCircle.ImageColor3 = Color3.fromRGB(210,210,210)\r\n\t\tCircle.ImageTransparency = 0.8\r\n\t\tCircle.Position = UDim2.new(0, Mouse.X - Circle.AbsolutePosition.X, 0, Mouse.Y - Circle.AbsolutePosition.Y)\r\n\t\tlocal Size = Object.AbsoluteSize.X\r\n\t\tTweenService:Create(Circle, TweenInfo.new(0.5), {Position = UDim2.fromScale(math.clamp(Mouse.X - Object.AbsolutePosition.X, 0, Object.AbsoluteSize.X)/Object.AbsoluteSize.X,Object,math.clamp(Mouse.Y - Object.AbsolutePosition.Y, 0, Object.AbsoluteSize.Y)/Object.AbsoluteSize.Y) - UDim2.fromOffset(Size/2,Size/2), ImageTransparency = 1, Size = UDim2.fromOffset(Size,Size)}):Play()\r\n\t\tspawn(function()\r\n\t\t\twait(0.5)\r\n\t\t\tCircle:Destroy()\r\n\t\tend)\r\n\tend)\r\nend\r\n\r\nfunction SolarisLib:Notification(title, desc)\r\n    Notify:New(title,desc)\r\nend    \r\n\r\nfunction SolarisLib:New(Config)\r\n    if not isfolder(Config.FolderToSave) then \r\n        makefolder(Config.FolderToSave)\r\n    end\r\n    \r\n    if not isfolder(Config.FolderToSave .. \"/configs\") then \r\n        makefolder(Config.FolderToSave .. \"/configs\")\r\n    end\r\n    \r\n    if not isfile(Config.FolderToSave .. \"/settings.txt\") then\r\n        local content = {}\r\n        for i,v in pairs(SolarisLib.Settings) do\r\n            content[i] = v\r\n        end\r\n        writefile(Config.FolderToSave .. \"/settings.txt\", tostring(http:JSONEncode(content)))\r\n    end    \r\n    SolarisLib.Settings = http:JSONDecode(readfile(Config.FolderToSave .. \"/settings.txt\"))\r\n\r\n    local closebindbinding = false\r\n    local fs = false\r\n    local tabcount = 0\r\n    local uitoggled = true\r\n    local tabmenutoggled = false\r\n    local TabPreset = game:GetObjects(\"rbxassetid://6958615840\")[1]\r\n    local SectionPreset = game:GetObjects(\"rbxassetid://7121846230\")[1]\r\n    local ContainerPreset = game:GetObjects(\"rbxassetid://7121886326\")[1]\r\n    local MFrame = MainUI.MainFrame\r\n    MainUI.Parent = Solaris\r\n    MFrame.TopBar.TopFrameTitle.Text = Config.Name\r\n    MakeDraggable(MFrame.TopBar, MainUI) \r\n    local oldScript = script\r\n\r\n    local MenuBtnPreset = game:GetObjects(\"rbxassetid://7037141226\")[1]\r\n    local MusicBtn = MenuBtnPreset:Clone()\r\n    MusicBtn.Parent = MFrame.TopBar.ButtonHolder.MenuBtn.MenuFrame\r\n    MusicBtn.Position = UDim2.new(0,0,0,5)\r\n    MusicBtn.Text = \"Music\"\r\n    MusicBtn.MouseEnter:Connect(function() TweenService:Create(MusicBtn,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0}):Play() end)\r\n    MusicBtn.MouseLeave:Connect(function() TweenService:Create(MusicBtn,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play() end)\r\n    local SettingsBtn = MenuBtnPreset:Clone()\r\n    SettingsBtn.Parent = MFrame.TopBar.ButtonHolder.MenuBtn.MenuFrame\r\n    SettingsBtn.Position = UDim2.new(0,0,0,25)\r\n    SettingsBtn.Text = \"Settings\"\r\n    SettingsBtn.MouseEnter:Connect(function() TweenService:Create(SettingsBtn,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0}):Play() end)\r\n    SettingsBtn.MouseLeave:Connect(function() TweenService:Create(SettingsBtn,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play() end)\r\n\r\n\r\n    function MusicConstructor()\r\n        local abuttonhold = false\r\n        local playing = false\r\n        local MarketplaceService = game:GetService(\"MarketplaceService\")\r\n        local MusicFrame, MusicPreset = game:GetObjects(\"rbxassetid://7296373622\")[1], game:GetObjects(\"rbxassetid://7296615234\")[1]\r\n        MusicFrame.Parent = Solaris\r\n        MusicFrame.ZIndex = 5\r\n        MusicFrame.Visible = SolarisLib.Settings.ShowMusicOnLaunch\r\n        MusicFrame.Frame.Title.Text = \"Not Playing\"\r\n        MusicFrame.Frame.Progress.ProgressFrame.Size = UDim2.new(0,0,1,0)\r\n        MusicFrame.Frame.AddBtn.AutoButtonColor = false\r\n\r\n        MakeDraggable(MusicFrame.Frame.TopBar,MusicFrame)\r\n        MusicFrame.Frame.TopBar.CloseBtn.MouseButton1Click:Connect(function()\r\n            MusicFrame.Visible = false\r\n        end)\r\n        MusicFrame.Frame.TopBar.CloseBtn.MouseEnter:Connect(function() TweenService:Create(MusicFrame.Frame.TopBar.CloseBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0}):Play() end)\r\n        MusicFrame.Frame.TopBar.CloseBtn.MouseLeave:Connect(function() TweenService:Create(MusicFrame.Frame.TopBar.CloseBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0.4}):Play() end)\r\n        MusicBtn.MouseButton1Click:Connect(function()\r\n            MusicFrame.Visible = not MusicFrame.Visible\r\n            MFrame.TopBar.ButtonHolder.MenuBtn.MenuFrame.Visible = false \r\n        end)\r\n\r\n        local Sound = Instance.new(\"Sound\")\r\n        Sound.Name = \"Sound\"\r\n        Sound.Parent = MusicFrame\r\n        Sound.Volume = 3\r\n        Sound:Stop()\r\n\r\n        local Sounds = {}\r\n        if not isfile(Config.FolderToSave .. \"/music.txt\") then writefile(Config.FolderToSave .. \"/music.txt\", tostring(http:JSONEncode({}))) end\r\n        Sounds = http:JSONDecode(readfile(Config.FolderToSave .. \"/music.txt\"))\r\n\r\n        function Save()\r\n            local content = {}\r\n            for i,v in pairs(Sounds) do\r\n                content[i] = v\r\n            end\r\n            writefile(Config.FolderToSave .. \"/music.txt\", tostring(http:JSONEncode(content)))\r\n        end    \r\n\r\n        local function PlaySong(id, title)\r\n            Sound:Stop()\r\n            playing = true\r\n            Sound.SoundId = \"rbxassetid://\" .. id\r\n            Sound:Resume()\r\n            MusicFrame.Frame.Play.Image = \"http://www.roblox.com/asset/?id=6026663719\"\r\n            MusicFrame.Frame.Title.Text = title\r\n        end    \r\n\r\n        local function RefreshList(list)\r\n            for i,v in next, MusicFrame.Frame.MusicList.Scroll:GetChildren() do\r\n                if v.Name == \"Btn\" then\r\n                    v:Destroy()\r\n                end    \r\n            end\r\n            for i,v in next, list do\r\n                local success, info = pcall(MarketplaceService.GetProductInfo, MarketplaceService, v)\r\n                if success and info.AssetTypeId == 3 then\r\n                    local Btn = MusicPreset:Clone()\r\n                    Btn.Parent = MusicFrame.Frame.MusicList.Scroll\r\n                    Btn.Title.Text = info.Name\r\n\r\n                    Btn.MouseButton1Click:Connect(function()\r\n                        PlaySong(v, info.Name)\r\n                    end)\r\n\r\n                    Btn.Delete.MouseButton1Click:Connect(function()\r\n                        for g,c in next, Sounds do\r\n                            if c == v then\r\n                                table.remove(Sounds, g)\r\n                            end    \r\n                        end    \r\n                        Save()\r\n                        Btn:Destroy()   \r\n                    end)\r\n                end\r\n            end    \r\n        end \r\n        \r\n        MusicFrame.Frame.Play.MouseButton1Click:Connect(function()\r\n            playing = not playing\r\n            if playing then Sound:Pause() else Sound:Resume() end\r\n            MusicFrame.Frame.Play.Image = playing and \"http://www.roblox.com/asset/?id=6026663699\" or \"http://www.roblox.com/asset/?id=6026663719\"\r\n        end)\r\n\r\n        MusicFrame.Frame.AddBtn.MouseButton1Click:Connect(function()\r\n            local id = MusicFrame.Frame.AddSong.Text\r\n            if not table.find(Sounds, id) then\r\n                table.insert(Sounds, id)\r\n                Save()\r\n                RefreshList(Sounds)\r\n            end    \r\n        end)\r\n\r\n        MusicFrame.Frame.AddBtn.MouseEnter:Connect(function()\r\n            abuttonhold = true\r\n        end)\r\n\r\n        MusicFrame.Frame.AddBtn.MouseLeave:Connect(function()\r\n            abuttonhold = false\r\n        end)\r\n\r\n        RefreshList(Sounds)\r\n\r\n        game:GetService(\"RunService\").RenderStepped:Connect(function()\r\n            local time = math.floor(Sound.TimePosition)\r\n            local timesecs = time % 60\r\n            local timemins = math.floor(time / 60)\r\n            if string.len(timesecs) \u003C 2 then timesecs = \"0\" .. timesecs end\r\n            if string.len(timemins) \u003C 2 then timemins = \"0\" .. timemins end\r\n            local timemax = math.floor(Sound.TimeLength)\r\n            local timemaxsecs = timemax % 60\r\n            local timemaxmins = math.floor(timemax / 60)\r\n            if string.len(timemaxsecs) \u003C 2 then timemaxsecs = \"0\" .. timemaxsecs end\r\n            if string.len(timemaxmins) \u003C 2 then timemaxmins = \"0\" .. timemaxmins end\r\n            MusicFrame.Frame.Timer1.Text = timemins .. \":\" .. timesecs\r\n            MusicFrame.Frame.Timer2.Text = timemaxmins .. \":\" .. timemaxsecs\r\n            MusicFrame.Frame.Progress.ProgressFrame.Size = UDim2.new(Sound.TimePosition / Sound.TimeLength,0,1,0)\r\n        end)\r\n\r\n        \r\n        spawn(function()\r\n            while wait() do\r\n                MusicFrame.Frame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].MainFrame\r\n                MusicFrame.Frame.TopBar.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n                MusicFrame.Frame.TopBar.CloseBtn.Ico.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                MusicFrame.Frame.MusicList.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n                MusicFrame.Frame.AddBtn.BackgroundColor3 = abuttonhold and SolarisLib.Themes[SolarisLib.Settings.Theme].ButtonHold or SolarisLib.Themes[SolarisLib.Settings.Theme].Button\r\n                MusicFrame.Frame.Progress.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Slider\r\n                MusicFrame.Frame.Progress.ProgressFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].SliderInc\r\n                MusicFrame.Frame.AddSong.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Textbox\r\n            end\r\n        end)\r\n    end  \r\n\r\n    function SettingsConstructor()\r\n        local Settings, SettingsFrame, TabPreset, ContainerPreset, TogglePreset, BindPreset, DropdownPreset, OptionPreset = {}, game:GetObjects(\"rbxassetid://7167491516\")[1], game:GetObjects(\"rbxassetid://7177524915\")[1], game:GetObjects(\"rbxassetid://7203599409\")[1], game:GetObjects(\"rbxassetid://7208643984\")[1], game:GetObjects(\"rbxassetid://7219277948\")[1], game:GetObjects(\"rbxassetid://7435055269\")[1], game:GetObjects(\"rbxassetid://7435032496\")[1]\r\n        local fs = true\r\n        local SFrame = SettingsFrame.Main\r\n        SettingsFrame.Parent = MFrame\r\n        SFrame.TopBar.CloseBtn.MouseEnter:Connect(function() TweenService:Create(SFrame.TopBar.CloseBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0}):Play() end)\r\n        SFrame.TopBar.CloseBtn.MouseLeave:Connect(function() TweenService:Create(SFrame.TopBar.CloseBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0.4}):Play() end)\r\n        SettingsBtn.MouseButton1Click:Connect(function()\r\n            SettingsFrame.Visible = not SettingsFrame.Visible\r\n            MFrame.TopBar.ButtonHolder.MenuBtn.MenuFrame.Visible = false \r\n        end)\r\n        SFrame.TopBar.CloseBtn.MouseButton1Click:Connect(function()\r\n            SettingsFrame.Visible = false\r\n        end)\r\n\r\n        function SaveSettings()\r\n            local content = {}\r\n            for i,v in pairs(SolarisLib.Settings) do\r\n                content[i] = v\r\n            end\r\n            writefile(Config.FolderToSave .. \"/settings.txt\", tostring(http:JSONEncode(content)))\r\n        end    \r\n\r\n        \r\n        spawn(function()\r\n            while wait() do\r\n                SFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].MainFrame\r\n                SFrame.TopBar.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n                SFrame.TopBar.CloseBtn.Ico.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                SFrame.TopBar.TopFrameTitle.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                SFrame.TabHolder.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n\r\n            end\r\n        end)\r\n\r\n        function Settings:Tab(text)\r\n            local Tab = TabPreset:Clone()\r\n            local Container = ContainerPreset:Clone()\r\n            Tab.Parent = SFrame.TabHolder\r\n            Tab.Text = text\r\n            Tab.Size = UDim2.new(0,Tab.TextBounds.X,1,0)\r\n            Container.Parent = SFrame.ContainerFolder\r\n            Container.Visible = false\r\n\r\n            if fs then\r\n                Tab.TextTransparency = 0\r\n                Container.Visible = true\r\n                fs = false\r\n            end    \r\n\r\n            Tab.MouseButton1Click:Connect(function()\r\n                for i,v in next, SFrame.TabHolder:GetChildren() do\r\n                    if v.Name == \"Tab\" then\r\n                        v.TextTransparency = 0.4\r\n                    end    \r\n                end      \r\n                for i,v in next, SFrame.ContainerFolder:GetChildren() do\r\n                    if v.Name == \"Container\" then\r\n                        v.Visible = false\r\n                    end    \r\n                end      \r\n                Tab.TextTransparency = 0      \r\n                Container.Visible = true\r\n            end)\r\n            local TabHold = {}\r\n            function TabHold:ToggleSetting(title, desc, def, path)\r\n                local value = SolarisLib.Settings[path] or def\r\n                local Toggle = TogglePreset:Clone()\r\n                Toggle.Parent = Container\r\n                Toggle.Title.Text = title\r\n                Toggle.Desc.Text = desc\r\n\r\n                local function Tween(val)\r\n                    TweenService:Create(Toggle.ToggleFrame.ToggleToggled.ToggleIco,TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency= val and 0 or 1}):Play()\r\n                    TweenService:Create(Toggle.ToggleFrame.ToggleToggled.ToggleIco,TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size= val and UDim2.new(1,-2,1,-2) or UDim2.new(1,-6,1,-6)}):Play()\r\n                end    \r\n\r\n                local function SetValue(val)\r\n                    Tween(val)\r\n                    SolarisLib.Settings[path] = val\r\n                    value = val\r\n                    SaveSettings()\r\n                end    \r\n\r\n                Tween(value)\r\n\r\n                Toggle.MouseButton1Click:Connect(function()\r\n                    SetValue(not value)     \r\n                end)\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                        Toggle.ToggleFrame.ToggleToggled.BackgroundColor3 = value and SolarisLib.Themes[SolarisLib.Settings.Theme].ToggleToggled or SolarisLib.Themes[SolarisLib.Settings.Theme].MainFrame\r\n                        Toggle.ToggleFrame.BackgroundColor3 = value and SolarisLib.Themes[SolarisLib.Settings.Theme].ToggleToggled or SolarisLib.Themes[SolarisLib.Settings.Theme].ToggleFrame\r\n                        Toggle.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n            end\r\n            function TabHold:BindSetting(title, desc, def, path)\r\n                local value = SolarisLib.Settings[path] or def\r\n                local Bind = BindPreset:Clone()\r\n                Bind.Parent = Container\r\n                Bind.Title.Text = title\r\n                Bind.Desc.Text = desc\r\n\r\n                function SetValue(val)\r\n                    closebindbinding = false\r\n                    value = val or value\r\n                    value = value.Name or value\r\n                    Bind.BText.Text = value\r\n                    SolarisLib.Settings[path] = value\r\n                    SaveSettings()\r\n                end    \r\n                SetValue(value)\r\n\r\n                Bind.InputEnded:Connect(function(Input)\r\n                    if Input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        if closebindbinding then return end\r\n                        closebindbinding = true\r\n                        Bind.BText.Text = \"...\"\r\n                    end\r\n                end)\r\n\r\n                UserInputService.InputBegan:Connect(function(Input)\r\n                    if UserInputService:GetFocusedTextBox() then return end\r\n                    if closebindbinding then\r\n                        local Key\r\n                        pcall(function()\r\n                            if not CheckKey(BlacklistedKeys, Input.KeyCode) then\r\n                                Key = Input.KeyCode\r\n                            end\r\n                        end)\r\n                        pcall(function()\r\n                            if CheckKey(WhitelistedMouse, Input.UserInputType) and not Key then\r\n                                Key = Input.UserInputType\r\n                            end\r\n                        end)\r\n                        Key = Key or value\r\n                        SetValue(Key)\r\n                    end\r\n                end)\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                        Bind.Desc.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                        Bind.BText.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                        Bind.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n            \r\n            end    \r\n            function TabHold:Dropdown(title, desc, list, def, path)\r\n                local opened = false\r\n                local value = SolarisLib.Settings[path] or def\r\n                local Dropdown = DropdownPreset:Clone()\r\n                Dropdown.Parent = Container\r\n                Dropdown.Title.Text = title\r\n                Dropdown.Desc.Text = desc\r\n                Dropdown.Main.Current.Text = value\r\n\r\n                function Toggle()\r\n                    Dropdown.Main.Holder.Visible = opened\r\n                    Dropdown.Main.Holder.Size = opened and UDim2.new(1,0,0,Dropdown.Main.Holder.UIListLayout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,0)\r\n                    if opened then\r\n                        if (Dropdown.Main.Holder.UIListLayout.AbsoluteContentSize.Y + Container.UIListLayout.AbsoluteContentSize.Y) > 190 then\r\n                            Container.CanvasSize = UDim2.new(0,0,0,Dropdown.Main.Holder.UIListLayout.AbsoluteContentSize.Y + Container.UIListLayout.AbsoluteContentSize.Y)\r\n                        end    \r\n                    else\r\n                        Container.CanvasSize = UDim2.new(0,0,0,Container.UIListLayout.AbsoluteContentSize.Y) \r\n                    end\r\n                    TweenService:Create(Dropdown.Main.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Rotation = opened and 180 or 0}):Play()\r\n                end   \r\n                \r\n                Dropdown.InputEnded:Connect(function(Input)\r\n                    if Input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        opened = not opened\r\n                        Toggle()\r\n                    end\r\n                end)\r\n\r\n                local function AddOptions(opts)\r\n                    for _,option in pairs(opts) do\r\n                        local Option = OptionPreset:Clone()\r\n                        Option.Parent = Dropdown.Main.Holder\r\n                        Option.Text = option\r\n\r\n                        Option.MouseButton1Click:Connect(function()\r\n                            value = option\r\n                            SolarisLib.Settings[path] = value\r\n                            Dropdown.Main.Current.Text = value\r\n                            SaveSettings()\r\n                        end)\r\n\r\n                        spawn(function()\r\n                            while wait() do\r\n                               Option.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor       \r\n                            end\r\n                        end)\r\n                    end   \r\n                end    \r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                        Dropdown.Main.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n                        Dropdown.Main.Holder.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n                    end\r\n                end)\r\n                AddOptions(list)\r\n            end\r\n            return TabHold\r\n        end   \r\n        \r\n        local general = Settings:Tab(\"General\")\r\n        general:ToggleSetting(\"Show Music On Launch\", \"Shows the music menu when you load Snow Hub\", true, \"ShowMusicOnLaunch\")\r\n        general:BindSetting(\"Close Bind\", \"Hides/Shows the main window when pressed.\", Enum.KeyCode.RightControl, \"CloseBind\")\r\n        \r\n        local appearance = Settings:Tab(\"Appearance\")\r\n        appearance:Dropdown(\"Theme\", \"The look of the user interface\", {\"Default\", \"Discord\", \"Red\", \"Green\", \"Blue\"}, \"Default\", \"Theme\")\r\n\r\n    end \r\n    MusicConstructor()\r\n    SettingsConstructor()\r\n\r\n    local function OpenTabMenu()\r\n        TweenService:Create(MFrame.TabMenu,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Position = UDim2.new(0,0,0,0)}):Play() \r\n    end   \r\n    \r\n    local function CloseTabMenu()\r\n        TweenService:Create(MFrame.TabMenu,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Position = UDim2.new(-0.37, -8, 0, 0)}):Play() \r\n    end \r\n\r\n    MFrame.TopBar.TabListBtn.MouseButton1Click:Connect(function()\r\n        OpenTabMenu()\r\n    end)\r\n\r\n    MFrame.TabMenu.Menu.Top.MenuCloseBtn.MouseButton1Click:Connect(function()\r\n        CloseTabMenu()\r\n    end)\r\n\r\n    MFrame.TopBar.ButtonHolder.SearchBtn.MouseButton1Click:Connect(function()\r\n        MFrame.TopBar.ButtonHolder.SearchBtn.TextBox.Visible = not MFrame.TopBar.ButtonHolder.SearchBtn.TextBox.Visible\r\n        MFrame.TopBar.TopFrameTitle.Visible = not MFrame.TopBar.TopFrameTitle.Visible\r\n    end)\r\n\r\n    MFrame.TopBar.ButtonHolder.CloseBtn.MouseEnter:Connect(function() TweenService:Create(MFrame.TopBar.ButtonHolder.CloseBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0}):Play() end)\r\n    MFrame.TopBar.ButtonHolder.CloseBtn.MouseLeave:Connect(function() TweenService:Create(MFrame.TopBar.ButtonHolder.CloseBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0.4}):Play() end)\r\n    MFrame.TopBar.ButtonHolder.SearchBtn.MouseEnter:Connect(function() TweenService:Create(MFrame.TopBar.ButtonHolder.SearchBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0}):Play() end)\r\n    MFrame.TopBar.ButtonHolder.SearchBtn.MouseLeave:Connect(function() TweenService:Create(MFrame.TopBar.ButtonHolder.SearchBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0.4}):Play() end)\r\n    MFrame.TopBar.ButtonHolder.MenuBtn.MouseEnter:Connect(function() TweenService:Create(MFrame.TopBar.ButtonHolder.MenuBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0}):Play() end)\r\n    MFrame.TopBar.ButtonHolder.MenuBtn.MouseLeave:Connect(function() TweenService:Create(MFrame.TopBar.ButtonHolder.MenuBtn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0.4}):Play() end)\r\n    MFrame.TopBar.TabListBtn.MouseEnter:Connect(function() TweenService:Create(MFrame.TopBar.TabListBtn,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0}):Play() end)\r\n    MFrame.TopBar.TabListBtn.MouseLeave:Connect(function() TweenService:Create(MFrame.TopBar.TabListBtn,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency = 0.4}):Play() end)\r\n    MFrame.TopBar.ButtonHolder.MenuBtn.MouseButton1Click:Connect(function() MFrame.TopBar.ButtonHolder.MenuBtn.MenuFrame.Visible = not MFrame.TopBar.ButtonHolder.MenuBtn.MenuFrame.Visible end)\r\n\r\n    MFrame.TopBar.ButtonHolder.CloseBtn.MouseButton1Click:Connect(function()\r\n        uitoggled = not uitoggled\r\n        MainUI.Visible = uitoggled\r\n    end)\r\n\r\n\r\n    function SearchConstructor()\r\n        function StitchElements()\r\n            local elms = {}\r\n            for i,v in next, SolarisLib.CurrentTab:GetDescendants() do\r\n                if string.find(v.Name, \"element\") then\r\n                    table.insert(elms, v)        \r\n                end\r\n            end   \r\n            return elms\r\n        end    \r\n\r\n        MFrame.TopBar.ButtonHolder.SearchBtn.TextBox:GetPropertyChangedSignal(\"Text\"):Connect(function()\r\n            for i,v in pairs(StitchElements()) do\r\n                if string.len(MFrame.TopBar.ButtonHolder.SearchBtn.TextBox.Text) >= 1 then\r\n                    if string.find(string.sub(v.Name:lower(),0,-8), MFrame.TopBar.ButtonHolder.SearchBtn.TextBox.Text:lower()) then\r\n                        v.Visible = true\r\n                    else\r\n                        v.Visible = false\r\n                    end \r\n                else\r\n                    v.Visible = true                 \r\n                end\r\n            end    \t\t\r\n        end)\r\n    end    \r\n\r\n    SearchConstructor()\r\n    \r\n\r\n\tUserInputService.InputBegan:Connect(function(Input)\r\n\t\tif (Input.KeyCode.Name == SolarisLib.Settings.CloseBind or Input.UserInputType.Name == SolarisLib.Settings.CloseBind) and not closebindbinding then\r\n            uitoggled = not uitoggled\r\n            MainUI.Visible = uitoggled\r\n\t\tend\r\n\tend)\r\n\r\n    spawn(function()\r\n        while wait() do\r\n            MFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].MainFrame\r\n            MFrame.TopBar.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n            MFrame.TopBar.ButtonHolder.CloseBtn.Ico.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TopBar.ButtonHolder.MenuBtn.Ico.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TopBar.ButtonHolder.SearchBtn.Ico.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TopBar.TabListBtn.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TopBar.TopFrameTitle.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TabMenu.Menu.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Menu\r\n            MFrame.TabMenu.Menu.Top.MenuCloseBtn.ImageLabel.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TopBar.ButtonHolder.SearchBtn.TextBox.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].MainFrame\r\n            MFrame.TopBar.ButtonHolder.SearchBtn.TextBox.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TopBar.ButtonHolder.SearchBtn.TextBox.PlaceholderColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n            MFrame.TopBar.ButtonHolder.MenuBtn.MenuFrame.Frame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TopBar\r\n        end\r\n    end)\r\n\r\n    function SolarisLib:LoadCfg(cfg)\r\n        local content = http:JSONDecode(cfg)\r\n        table.foreach(content, function(a,b)\r\n            if SolarisLib.Flags[a] then\r\n                spawn(function() SolarisLib.Flags[a]:Set(b) end)\r\n            else\r\n                warn(\"cfg loader - could not find\", a ,b )\r\n            end\r\n        end)\r\n    end\r\n    \r\n    function SolarisLib:SaveCfg(name)\r\n        local content = {}\r\n        for i,v in pairs(SolarisLib.Flags) do\r\n            content[i] = v.Value\r\n        end\r\n        writefile(Config.FolderToSave .. \"/configs/\" .. name .. \".txt\", tostring(http:JSONEncode(content)))\r\n    end\r\n    \r\n\r\n    local TabHolder = {}\r\n    function TabHolder:Tab(text)\r\n        local Tab = TabPreset:Clone()\r\n        Tab.AutoButtonColor = false\r\n        Tab.Parent = MFrame.TabMenu.Menu.Holder\r\n        Tab.Text =  text\r\n        Tab.TextSize = 14\r\n\r\n\r\n        local Container =  ContainerPreset:Clone()\r\n        Container.Parent = MFrame.ContainerFolder\r\n        Container.Visible = false\r\n\r\n        if fs == false then\r\n            fs = true\r\n            Container.Visible = true\r\n            Tab.UIPadding.PaddingLeft = UDim.new(0,10)\r\n            Tab.TextTransparency = 0\r\n            Tab.BackgroundTransparency = 0  \r\n            SolarisLib.CurrentTab = Container  \r\n        end    \r\n\r\n        spawn(function()\r\n            while wait() do\r\n                Tab.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                Tab.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TabToggled\r\n                Container.CanvasSize = UDim2.new(0,0,0,Container.UIListLayout.AbsoluteContentSize.Y + 26)\r\n            end\r\n        end)\r\n\r\n\r\n        \r\n        Tab.MouseButton1Click:Connect(function()\r\n            for i,v in next, MFrame.TabMenu.Menu.Holder:GetChildren() do\r\n                if v:IsA(\"TextButton\") then\r\n                    TweenService:Create(v,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play() \r\n                    TweenService:Create(v,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 1}):Play() \r\n                    TweenService:Create(v.UIPadding,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{PaddingLeft = UDim.new(0,5)}):Play() \r\n                end    \r\n                TweenService:Create(Tab,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0}):Play() \r\n                TweenService:Create(Tab,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 0}):Play() \r\n                TweenService:Create(Tab.UIPadding,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{PaddingLeft = UDim.new(0,10)}):Play() \r\n            end   \r\n            for i,v in next, MFrame.ContainerFolder:GetChildren() do\r\n                if v.Name == \"Container\" then\r\n                    v.Visible = false\r\n                end    \r\n                Container.Visible = true\r\n            end\r\n            tabtoggledname = Tab.Name\r\n            CloseTabMenu()\r\n        end)\r\n\r\n\r\n        local SectionHold = {}\r\n        function SectionHold:Section(text)\r\n            local Section = SectionPreset:Clone()\r\n            Section.Parent = Container\r\n            Section.SectionTitle.Text = text\r\n\r\n            spawn(function()\r\n                while wait() do\r\n                    Section.SectionTitle.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    Section.Size = UDim2.new(0.9,0,0,Section.UIListLayout.AbsoluteContentSize.Y)\r\n                end\r\n            end)\r\n            local ItemHold = {}\r\n            function ItemHold:Button(text,callback)\r\n                local Holding = false\r\n                local Button = game:GetObjects(\"rbxassetid://6937142338\")[1]\r\n                Button.Parent = Section\r\n                Button.Name = text .. \"element\"\r\n                Button.ButtonText.Text = text\r\n                Button.ClipsDescendants = true\r\n                \r\n                Button.MouseButton1Click:Connect(function()\r\n                    callback()\r\n                    Ripple(Button)\r\n                end)\r\n                Button.MouseEnter:Connect(function()\r\n                    Holding = true\r\n                end)\r\n                Button.MouseLeave:Connect(function()\r\n                    Holding = false\r\n                end)\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                       Button.BackgroundColor3 = Holding and SolarisLib.Themes[SolarisLib.Settings.Theme].ButtonHold or SolarisLib.Themes[SolarisLib.Settings.Theme].Button\r\n                       Button.ButtonText.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n            end    \r\n            function ItemHold:Toggle(text,def,flag,callback)\r\n                local Toggle,ToggleMain = {Value = false}, game:GetObjects(\"rbxassetid://6963155498\")[1]\r\n                ToggleMain.Parent = Section\r\n                ToggleMain.ToggleText.Text = text\r\n                ToggleMain.Name = text .. \"element\"\r\n\r\n                function Toggle:Set(value)\r\n\t\t\t\t\tToggle.Value = value\r\n                    TweenService:Create(ToggleMain.ToggleFrame.ToggleToggled.ToggleIco,TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{ImageTransparency= Toggle.Value and 0 or 1}):Play()\r\n                    TweenService:Create(ToggleMain.ToggleFrame.ToggleToggled.ToggleIco,TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size= Toggle.Value and UDim2.new(1,-2,1,-2) or UDim2.new(1,-6,1,-6)}):Play()\r\n\t\t\t\t\treturn callback(Toggle.Value)\r\n\t\t\t\tend\r\n\t\t\t\t\r\n\t\t\t\tToggleMain.MouseButton1Click:Connect(function()\r\n\t\t\t\t\tToggle.Value = not Toggle.Value\r\n\t\t\t\t\tToggle:Set(Toggle.Value)           \r\n\t\t\t\tend)\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                        ToggleMain.ToggleFrame.ToggleToggled.BackgroundColor3 = Toggle.Value and SolarisLib.Themes[SolarisLib.Settings.Theme].ToggleToggled or SolarisLib.Themes[SolarisLib.Settings.Theme].Toggle\r\n                        ToggleMain.ToggleFrame.BackgroundColor3 = Toggle.Value and SolarisLib.Themes[SolarisLib.Settings.Theme].ToggleToggled or SolarisLib.Themes[SolarisLib.Settings.Theme].ToggleFrame\r\n                        ToggleMain.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Toggle\r\n                        ToggleMain.ToggleText.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n\t\t\t\tToggle:Set(def)\r\n                SolarisLib.Flags[flag] = Toggle\r\n                return Toggle\r\n            end    \r\n            function ItemHold:Slider(text,min,max,start,inc,flag,callback)\r\n                local Slider,SliderMain = {Value = start}, game:GetObjects(\"rbxassetid://6967573727\")[1]\r\n                SliderMain.Parent = Section\r\n                SliderMain.SliderText.Text = text\r\n                SliderMain.Name = text .. \"element\"\r\n                local dragging = false\r\n\r\n                local function move(Input)\r\n                    local XSize = math.clamp((Input.Position.X - SliderMain.SliderFrame.AbsolutePosition.X) / SliderMain.SliderFrame.AbsoluteSize.X, 0, 1)\r\n                    local Increment = inc and (max / ((max - min) / (inc * 4))) or (max >= 50 and max / ((max - min) / 4)) or (max >= 25 and max / ((max - min) / 2)) or (max / (max - min))\r\n                    local SizeRounded = UDim2.new((math.round(XSize * ((max / Increment) * 4)) / ((max / Increment) * 4)), 0, 1, 0) \r\n                    TweenService:Create(SliderMain.SliderFrame.SliderCurrentFrame,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = SizeRounded}):Play() \r\n                    local Val = math.round((((SizeRounded.X.Scale * max) / max) * (max - min) + min) * 20) / 20\r\n                    SliderMain.SliderVal.Text = tostring(Val)\r\n                    Slider.Value = Val\r\n                    callback(Slider.Value)\r\n\t\t\t\tend\r\n\t\t\t\tSliderMain.SliderFrame.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end end)\r\n\t\t\t\tSliderMain.SliderFrame.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end end)\r\n\t\t\t\tgame:GetService(\"UserInputService\").InputChanged:Connect(function(input) if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then move(input) end end)\r\n\r\n                function Slider:Set(val)\r\n                    local a = tostring(val and (val / max) * (max - min) + min) or 0\r\n\t\t\t\t\tSliderMain.SliderVal.Text = tostring(a)\r\n                    SliderMain.SliderFrame.SliderCurrentFrame.Size = UDim2.new((val or 0) / max, 0, 1, 0)\r\n                    Slider.Value = val\r\n\t\t\t\t\treturn callback(Slider.Value)\r\n\t\t\t\tend\t\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                       SliderMain.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Slider\r\n                       SliderMain.SliderFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].SliderBar\r\n                       SliderMain.SliderFrame.SliderCurrentFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].SliderInc\r\n                       SliderMain.SliderText.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                       SliderMain.SliderVal.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n\r\n                Slider:Set(start)\r\n                SolarisLib.Flags[flag] = Slider\r\n                return Slider\r\n            end    \r\n            function ItemHold:Dropdown(text,list,def,flag,callback)\r\n                local Dropdown,DropMain,OptionPreset = {Value = nil, Toggled = false, Options = list}, game:GetObjects(\"rbxassetid://7027964359\")[1], game:GetObjects(\"rbxassetid://7021432326\")[1]\r\n                DropMain.Parent = Section\r\n                DropMain.Btn.Title.Text = text\r\n                DropMain.Name = text .. \"element\"\r\n                \r\n\r\n                local function ToggleDrop()\r\n                    Dropdown.Toggled = not Dropdown.Toggled\r\n                    DropMain.Holder.Size = Dropdown.Toggled and UDim2.new(1,0,0,6+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,0)\r\n                    TweenService:Create(DropMain,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1,0,0,38+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,32)}):Play() \r\n                    TweenService:Create(DropMain.Btn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Rotation = Dropdown.Toggled and 180 or 0}):Play() \r\n                    DropMain.Holder.Visible = Dropdown.Toggled\r\n                end  \r\n\r\n                local function AddOptions(opts)\r\n                    for _,option in pairs(opts) do\r\n                        local Option = OptionPreset:Clone()\r\n                        Option.Parent = DropMain.Holder\r\n                        Option.ItemText.Text = option\r\n                        Option.ClipsDescendants = true\r\n\r\n                        Option.MouseButton1Click:Connect(function()\r\n                            Dropdown.Value = option\r\n                            DropMain.Btn.Title.Text = text .. \" - \" .. option\r\n                            Ripple(Option)\r\n                            return callback(Dropdown.Value)\r\n                        end)\r\n\r\n                        spawn(function()\r\n                            while wait() do\r\n                               Option.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].DropdownItem\r\n                               DropMain.Btn.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                            end\r\n                        end)\r\n                    end   \r\n                end    \r\n\r\n                function Dropdown:Refresh(opts,del)\r\n                    if del then\r\n                        for _,v in pairs(DropMain.Holder:GetChildren()) do\r\n                            if v:IsA\"TextButton\" then\r\n\t\t\t\t\t\t\t\tv:Destroy()\r\n                                DropMain.Holder.Size = Dropdown.Toggled and UDim2.new(1,0,0,6+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,0)\r\n                                DropMain.Size = Dropdown.Toggled and UDim2.new(1,0,0,38+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,32)\r\n\t\t\t\t\t\t\tend\r\n                        end    \r\n                    end    \r\n                    AddOptions(opts)\r\n                end    \r\n             \r\n\r\n                DropMain.Btn.MouseButton1Click:Connect(function()\r\n                    ToggleDrop()\r\n                end)\r\n\r\n                function Dropdown:Set(val)\r\n\t\t\t\t\tDropdown.Value = val\r\n                    DropMain.Btn.Title.Text = text .. \" - \" .. val\r\n\t\t\t\t\treturn callback(Dropdown.Value)\r\n\t\t\t\tend\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                       DropMain.Btn.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Dropdown\r\n                       DropMain.Btn.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                       DropMain.Btn.Ico.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n                Dropdown:Refresh(list,false)\r\n                Dropdown:Set(def)\r\n                SolarisLib.Flags[flag] = Dropdown\r\n                return Dropdown\r\n            end   \r\n            function ItemHold:MultiDropdown(text,list,def,flag,callback)\r\n                local Dropdown,DropMain,OptionPreset = {Value = {}, Toggled = false, Options = list}, game:GetObjects(\"rbxassetid://7027964359\")[1], game:GetObjects(\"rbxassetid://7021432326\")[1]\r\n                DropMain.Parent = Section\r\n                DropMain.Btn.Title.Text = text\r\n                DropMain.Name = text .. \"element\"\r\n                \r\n\r\n                local function ToggleDrop()\r\n                    Dropdown.Toggled = not Dropdown.Toggled\r\n                    DropMain.Holder.Size = Dropdown.Toggled and UDim2.new(1,0,0,6+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,0)\r\n                    TweenService:Create(DropMain,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1,0,0,38+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,32)}):Play() \r\n                    TweenService:Create(DropMain.Btn.Ico,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Rotation = Dropdown.Toggled and 180 or 0}):Play() \r\n                    DropMain.Holder.Visible = Dropdown.Toggled\r\n                end  \r\n\r\n                local function AddOptions(opts)\r\n                    for _,option in pairs(opts) do\r\n                        local Option = OptionPreset:Clone()\r\n                        Option.Parent = DropMain.Holder\r\n                        Option.ItemText.Text = option\r\n                        Option.ClipsDescendants = true\r\n\r\n                        Option.MouseButton1Click:Connect(function()\r\n                            if table.find(Dropdown.Value, option) then\t\t\t\t\r\n\t\t\t\t\t\t\t\ttable.remove(Dropdown.Value, table.find(Dropdown.Value, option))\r\n\t\t\t\t\t\t\t\tDropMain.Btn.Title.Text = text .. \" - \" .. table.concat(Dropdown.Value, \", \")\r\n\t\t\t\t\t\t\t\tcallback(Dropdown.Value)\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\ttable.insert(Dropdown.Value, option)\r\n\t\t\t\t\t\t\t\tDropMain.Btn.Title.Text = text .. \" - \" .. table.concat(Dropdown.Value, \", \")\r\n\t\t\t\t\t\t\t\tcallback(Dropdown.Value)\r\n\t\t\t\t\t\t\tend\r\n                            Ripple(Option)\r\n                        end)\r\n\r\n                        spawn(function()\r\n                            while wait() do\r\n                               Option.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].DropdownItem\r\n                               DropMain.Btn.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                            end\r\n                        end)\r\n                    end   \r\n                end    \r\n\r\n                function Dropdown:Refresh(opts,del)\r\n                    if del then\r\n                        for _,v in pairs(DropMain.Holder:GetChildren()) do\r\n                            if v:IsA\"TextButton\" then\r\n\t\t\t\t\t\t\t\tv:Destroy()\r\n                                DropMain.Holder.Size = Dropdown.Toggled and UDim2.new(1,0,0,6+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,0)\r\n                                DropMain.Size = Dropdown.Toggled and UDim2.new(1,0,0,38+DropMain.Holder.Layout.AbsoluteContentSize.Y) or UDim2.new(1,0,0,32)\r\n\t\t\t\t\t\t\tend\r\n                        end    \r\n                    end    \r\n                    AddOptions(opts)\r\n                end    \r\n             \r\n\r\n                DropMain.Btn.MouseButton1Click:Connect(function()\r\n                    ToggleDrop()\r\n                end)\r\n\r\n                function Dropdown:Set(val)\r\n\t\t\t\t\tDropdown.Value = val\r\n                    DropMain.Btn.Title.Text = text .. \" - \" .. table.concat(Dropdown.Value, \", \")\r\n\t\t\t\t\treturn callback(Dropdown.Value)\r\n\t\t\t\tend\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                       DropMain.Btn.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Dropdown\r\n                       DropMain.Btn.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                       DropMain.Btn.Ico.ImageColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n                Dropdown:Refresh(list,false)\r\n                Dropdown:Set(def)\r\n                SolarisLib.Flags[flag] = Dropdown\r\n                return Dropdown\r\n            end    \r\n            function ItemHold:Colorpicker(text,preset,flag,callback)\r\n                local ColorH, ColorS, ColorV = 1, 1, 1\r\n                local ColorPicker, ColorPreset, DragPreset = {Value = preset, Toggled = false}, game:GetObjects(\"rbxassetid://7329998014\")[1]\r\n                ColorPreset.Hue.Visible, ColorPreset.Color.Visible = ColorPicker.Toggled, ColorPicker.Toggled\r\n                ColorPreset.Parent = Section\r\n                ColorPreset.Btn.Colorpicker.Text = text\r\n                ColorPreset.Name = text .. \"element\"\r\n                ColorPreset.Btn.Box.BackgroundColor3 = preset\r\n                ColorPreset.Hue.HueGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)), ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))}\r\n                local Color = ColorPreset.Color\r\n                local Hue = ColorPreset.Hue\r\n                local HueSelection = ColorPreset.Hue.HueSelection\r\n                local ColorSelection = ColorPreset.Color.ColorSelection\r\n                \r\n                function UpdateColorPicker()\r\n                    ColorPreset.Btn.Box.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)\r\n                    Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)\r\n                    pcall(callback, ColorPreset.Btn.Box.BackgroundColor3)\r\n                end\r\n    \r\n                ColorPreset.Btn.MouseButton1Click:Connect(function()\r\n                    ColorPicker.Toggled = not ColorPicker.Toggled\r\n                    TweenService:Create(ColorPreset,TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = ColorPicker.Toggled and UDim2.new(1,0,0,120) or UDim2.new(1,0,0,32)}):Play() \r\n                    ColorPreset.Hue.Visible, ColorPreset.Color.Visible = ColorPicker.Toggled, ColorPicker.Toggled\r\n                end)\r\n\r\n                ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)\r\n\t\t\t    ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)\r\n                ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)\r\n\r\n                ColorPreset.Btn.Box.BackgroundColor3 = preset\r\n                Color.BackgroundColor3 = preset\r\n                pcall(callback, ColorPreset.Btn.Box.BackgroundColor3)\r\n\r\n                Color.InputBegan:Connect(function(input)\r\n                    if input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        if ColorInput then\r\n                            ColorInput:Disconnect()\r\n                        end\r\n                        ColorInput = RunService.RenderStepped:Connect(function()\r\n                            local ColorX = (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)\r\n                            local ColorY = (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)\r\n                            ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)\r\n                            ColorS = ColorX\r\n                            ColorV = 1 - ColorY\r\n                            UpdateColorPicker()\r\n                        end)\r\n                    end\r\n                end)\r\n\r\n                Color.InputEnded:Connect(function(input)\r\n                    if input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        if ColorInput then\r\n                            ColorInput:Disconnect()\r\n                        end\r\n                    end\r\n                end)\r\n\r\n                Hue.InputBegan:Connect(function(input)\r\n                    if input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        if HueInput then\r\n                            HueInput:Disconnect()\r\n                        end\r\n    \r\n                        HueInput = RunService.RenderStepped:Connect(function()\r\n                            local HueY = (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)\r\n    \r\n                            HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)\r\n                            ColorH = 1 - HueY\r\n    \r\n                            UpdateColorPicker(true)\r\n                        end)\r\n                    end\r\n                end)\r\n    \r\n                Hue.InputEnded:Connect(function(input)\r\n                    if input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        if HueInput then\r\n                            HueInput:Disconnect()\r\n                        end\r\n                    end\r\n                end)\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                       ColorPreset.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Colorpicker\r\n                       ColorPreset.Btn.Colorpicker.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n                return ColorPicker\r\n            end\r\n            function ItemHold:Label(text)\r\n                local Label, LabelFrame = {}, game:GetObjects(\"rbxassetid://7032552322\")[1]\r\n                LabelFrame.Parent = Section\r\n                LabelFrame.Title.Text = text\r\n                LabelFrame.Name = text .. \"element\"\r\n\r\n                function Label:Set(tochange)\r\n                    LabelFrame.Title.Text = tochange\r\n                    LabelFrame.Name = text .. \"element\"\r\n                end    \r\n\r\n                \r\n                spawn(function()\r\n                    while wait() do\r\n                       LabelFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Label\r\n                       LabelFrame.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n                return Label\r\n            end\r\n            function ItemHold:Textbox(text,disappear,callback)\r\n                local Textbox, TextboxFrame = {}, game:GetObjects(\"rbxassetid://7147292392\")[1]\r\n                TextboxFrame.Parent = Section\r\n                TextboxFrame.Title.Text = text\r\n                TextboxFrame.Name = text .. \"element\"\r\n\r\n                TextboxFrame.Box.Changed:Connect(function()\r\n                    TextboxFrame.Box.Size = UDim2.new(0,TextboxFrame.Box.TextBounds.X + 16,0,22)\r\n                end)\r\n                TextboxFrame.Box.PlaceholderText = \"                  \"\r\n\r\n                TextboxFrame.InputBegan:Connect(function(input)\r\n\t\t\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        TextboxFrame.Box:CaptureFocus()\r\n\t\t\t\t\tend\r\n\t\t\t\tend)\r\n\t\t\t\t\r\n\r\n                TextboxFrame.Box.FocusLost:Connect(function()\r\n                    local txt = TextboxFrame.Box.Text\r\n                    if disappear then\r\n                        TextboxFrame.Box.Text = \"\"\r\n                    end  \r\n                    return callback(txt)\r\n\t\t\t\tend)\r\n\r\n                UserInputService.InputBegan:Connect(function(input)\r\n\t\t\t\t\tif input.KeyCode == Enum.KeyCode.Escape and TextboxFrame.Box:IsFocused() then\r\n\t\t\t\t\t\tTextboxFrame.Box:ReleaseFocus()\r\n\t\t\t\t\tend\r\n\t\t\t\tend)\r\n                \r\n                spawn(function()\r\n                    while wait() do\r\n                       TextboxFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Textbox\r\n                       TextboxFrame.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                       TextboxFrame.Box.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextboxFrame\r\n                       TextboxFrame.Box.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n                return Textbox\r\n            end    \r\n            function ItemHold:Bind(text,preset,holdmode,flag,callback)\r\n                local Bind, BindFrame = {Value, Binding = false, Holding = false}, game:GetObjects(\"rbxassetid://7126874744\")[1]\r\n                BindFrame.Parent = Section\r\n                BindFrame.Title.Text = text\r\n                BindFrame.Name = text .. \"element\"\r\n\r\n                \r\n\r\n                BindFrame.InputEnded:Connect(function(Input)\r\n                    if Input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n                        if Bind.Binding then return end\r\n                        Bind.Binding = true\r\n                        BindFrame.BText.Text = \"...\"\r\n                    end\r\n                end)\r\n\r\n                UserInputService.InputBegan:Connect(function(Input)\r\n                    if UserInputService:GetFocusedTextBox() then return end\r\n                    if (Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value) and not Bind.Binding then\r\n                        if holdmode then\r\n                            Holding = true\r\n                            callback(Holding)\r\n                        else\r\n                            callback()\r\n                        end\r\n                    elseif Bind.Binding then\r\n                        local Key\r\n                        pcall(function()\r\n                            if not CheckKey(BlacklistedKeys, Input.KeyCode) then\r\n                                Key = Input.KeyCode\r\n                            end\r\n                        end)\r\n                        pcall(function()\r\n                            if CheckKey(WhitelistedMouse, Input.UserInputType) and not Key then\r\n                                Key = Input.UserInputType\r\n                            end\r\n                        end)\r\n                        Key = Key or Bind.Value\r\n                        Bind:Set(Key)\r\n                    end\r\n                end)\r\n\r\n                UserInputService.InputEnded:Connect(function(Input)\r\n                    if Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value then\r\n                        if holdmode and Holding then\r\n                            Holding = false\r\n                            callback(Holding)\r\n                        end\r\n                    end\r\n                end)\r\n\r\n                function Bind:Set(key)\r\n                    self.Binding = false\r\n                    self.Value = key or self.Value\r\n                    self.Value = self.Value.Name or self.Value\r\n                    BindFrame.BText.Text = self.Value\r\n\t\t\t\tend\r\n\r\n                spawn(function()\r\n                    while wait() do\r\n                       BindFrame.BackgroundColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].Bind\r\n                       BindFrame.Title.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                       BindFrame.BText.TextColor3 = SolarisLib.Themes[SolarisLib.Settings.Theme].TextColor\r\n                    end\r\n                end)\r\n\r\n\t\t\t\tBind:Set(preset)\r\n                SolarisLib.Flags[flag] = Bind\r\n                return Bind\r\n            end    \r\n            return ItemHold\r\n        end    \r\n        return SectionHold\r\n    end \r\n    return TabHolder\r\nend    \r\nreturn SolarisLib"